version: "3.9"
services:
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:stable
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - DOCKER_TLS_VERIFY=${DOCKER_TLS_VERIFY}
    volumes:
      - ${DOCKER_VOLUMES}/homeassistant/data:/config
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    privileged: true
    network_mode: host
      
  esphome:
    container_name: esphome
    image: ghcr.io/esphome/esphome
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ${DOCKER_LARGE_VOLUMES}/esphome/data:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    privileged: true
    network_mode: host

  mqtt-explorer:
    container_name: mqtt-explorer
    image: smeagolworms4/mqtt-explorer
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - 4000:4000
    environment:
      TZ: ${TZ}
    volumes:
      - '${DOCKER_VOLUMES}/mqtt-explorer/data:/mqtt-explorer/config'
    restart: always

  node-red:
    image: nodered/node-red:latest
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    container_name: node-red
    restart: always
    volumes:
      - ${DOCKER_VOLUMES}/node-red/data:/data
    environment:
      TZ: ${TZ}
    ports:
      - 1880:1880
    user: "0:0"

  eufy:
    image: bropat/eufy-security-ws
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    container_name: eufy
    volumes:
      - ${DOCKER_VOLUMES}/eufy/data:/data
    ports:
      - 3000:3000/tcp
    environment:
      USERNAME: ${EUFY_USERNAME}
      PASSWORD: ${EUFY_PASSWORD}
      COUNTRY: ${COUNTRY}
    restart: always

  go2rtc:
    image: alexxit/go2rtc
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    network_mode: host
    container_name: go2rtc
    privileged: true 
    restart: always
    environment:
      - TZ=${TZ}
    volumes:
      - "${DOCKER_VOLUMES}/go2rtc/data:/config"

  # pxe:
  #   container_name: pxe
  #   image: nginx:alpine
  #   restart: always
  #   ports:
  #     - 88:80
  #   volumes:
  #     - ${DOCKER_LARGE_VOLUMES}/pxe/data:/srv
  #     - ${DOCKER_LARGE_VOLUMES}/pxe/data/nginx.conf:/etc/nginx/conf.d/default.conf
      
  # tftp:
  #   image: docker.io/kalaksi/tftpd
  #   container_name: tftp
  #   restart: always
  #   environment:
  #     TFTPD_BIND_ADDRESS: ${TFTPD_BIND_ADDRESS}
  #     TFTPD_EXTRA_ARGS: ${TFTPD_EXTRA_ARGS}
  #   cap_drop:
  #     - ALL
  #   cap_add:
  #     - SETUID
  #     - SETGID
  #     - SYS_CHROOT
  #   ports:
  #     - 69:1069/udp
  #   volumes:
  #     - ${DOCKER_LARGE_VOLUMES}/tftp/data:/tftpboot
